FOR A NEW REACT NATIVE PROJECT AT 0.64.3 & 0.63.4 WITH EXPO ~44.0.2 (THIS WAS AT THE NEWEST SDK)
My steps that worked for me are:
1. expo init <NameOfProject>
2. Bare-minimum

	IOS:
1. Change what is in red and yellow yourself (depending on the package installers is a waste of time)
2. Add these line: 
File - AppDelegate.m

#if RCT_DEV
#import <React/RCTDevLoadingView.h>
#endif
//^^^ ADDED THIS

  #if RCT_DEV
  [bridge moduleForClass:[RCTDevLoadingView class]];
#endif
  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
                                                   moduleName:@"main"
                                            initialProperties:nil];
  //^^^ ADDED THIS (replace the other RCTRootView *rootView)

3. Add To Podfile
Take Out these lines:
post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end

And Add These Lines:
 post_integrate do |installer|
    update_pod_build_phase_order("./Pods/Pods.xcodeproj", "ExpoModulesCore")
  end

  def update_pod_build_phase_order(xcodeproj_path, target_name)
    puts "Updating build phase order of 'Headers' in #{xcodeproj_path}, #{target_name} \n"
    project = Xcodeproj::Project.open(xcodeproj_path)
    target = project.targets.select { |t| t.name == target_name }.first
    puts "Found target: #{target.name}\n"
    cocoapods_index = target.build_phases.index do |b|
      puts "#{b} , #{b == "HeadersBuildPhase"}"
      b.to_s == "HeadersBuildPhase"
    end
    if cocoapods_index.nil? == false
        puts "#{target_name}: 'HeadersBuildPhase' index was: #{cocoapods_index}, moving to index 1.\n"
        target.build_phases.move_from(cocoapods_index, 1)
    end
    project.save
  end

	ANDROID:
1. I oddly had to re do my path variables
2. Using a API 29 with Android 10 (Q) x86 for this laptop (re did the simulator and removed  android api 30)
3. Launched app in android studio and used a terminal for the metro server

	TO CHANGE SDK VERSION ON REACT NATIVE
1. yarn add react-native@X.XX.X --save
2. (For resetting cache, deleting and re-installing node modules)
- watchman watch-del-all && rm -rf node_modules && yarn install && react-native start --reset-cache && rm -rf /tmp/metro-*
^^^ easy and faster way to reset everything according to your version 
^^^^ can also just use number 1 but if you need to refresh the cache add number 2 as well
	(^^^^ THIS WAS TO GET A BRAND NE PROJECT RUNNING ^^^^)

	IF THERE IS A ISSUE WITH THE "CYCLE IN DEPENDENCIES"
USE THIS: cd ios && rm -rf Pods && pod install && cd ..
		FURTHER NOTES MAY BE APPLIED LATER

	REACT NATIVE TESTING
Jest-Native: npm install --save-dev @testing-library/jest-native
Jest-Expo: yarn add --dev jest-expo jest
ADD THIS IN PACKAGE.JSON YOURSELF
"scripts": {
  ...
  "test": "jest"
},
"jest": {
  "preset": "jest-expo",
  "setupFiles": [
     "./setupJest.js"
  ]
}
React-Native Testing Library: yarn add --dev @testing-library/react-native
Jest-Fetch-Mock: yarn add --dev jest-fetch-mock
